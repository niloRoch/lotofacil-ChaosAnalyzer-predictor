# ============================================================================
# requirements-minimal.txt
# Instalação Mínima - Apenas funcionalidades essenciais
# ============================================================================

pandas>=1.5.0,<3.0.0
numpy>=1.21.0,<2.0.0
scikit-learn>=1.2.0,<2.0.0
xgboost>=1.7.0,<3.0.0
matplotlib>=3.5.0,<4.0.0
seaborn>=0.11.0,<1.0.0
scipy>=1.9.0,<2.0.0
tqdm>=4.64.0,<5.0.0
networkx>=2.8.0,<4.0.0
joblib>=1.2.0,<2.0.0

# ============================================================================
# requirements-dev.txt
# Dependências para Desenvolvimento
# ============================================================================

# Include base requirements
-r requirements.txt

# Testing
pytest>=7.0.0,<8.0.0
pytest-cov>=4.0.0,<5.0.0
pytest-mock>=3.8.0,<4.0.0
pytest-xdist>=3.0.0,<4.0.0

# Code Quality
black>=22.0.0,<24.0.0
isort>=5.10.0,<6.0.0
flake8>=5.0.0,<7.0.0
mypy>=0.991,<2.0.0
pylint>=2.15.0,<4.0.0

# Documentation
sphinx>=5.0.0,<8.0.0
sphinx-rtd-theme>=1.0.0,<3.0.0
mkdocs>=1.4.0,<2.0.0
mkdocs-material>=8.5.0,<10.0.0

# Development Tools
pre-commit>=2.20.0,<4.0.0
bandit>=1.7.0,<2.0.0
safety>=2.3.0,<3.0.0

# Profiling and Performance
line-profiler>=4.0.0,<5.0.0
memory-profiler>=0.60.0,<1.0.0
py-spy>=0.3.0,<1.0.0

# Jupyter Development
jupyter>=1.0.0,<2.0.0
jupyterlab>=3.4.0,<5.0.0
ipykernel>=6.15.0,<7.0.0
nbconvert>=7.0.0,<8.0.0

# ============================================================================
# requirements-gpu.txt
# Para suporte a GPU (CUDA)
# ============================================================================

# Include base requirements
-r requirements.txt

# GPU-specific packages
tensorflow-gpu>=2.10.0,<3.0.0
cupy-cuda11x>=11.0.0,<13.0.0     # Para CUDA 11.x
# cupy-cuda12x>=12.0.0,<13.0.0   # Para CUDA 12.x (descomente se necessário)

# ============================================================================
# requirements-web.txt
# Para interfaces web e APIs
# ============================================================================

# Include base requirements
-r requirements.txt

# Web Frameworks
streamlit>=1.15.0,<2.0.0
fastapi>=0.85.0,<1.0.0
uvicorn>=0.18.0,<1.0.0
dash>=2.6.0,<3.0.0
plotly>=5.10.0,<6.0.0

# Web Utilities
requests>=2.28.0,<3.0.0
aiohttp>=3.8.0,<4.0.0
websockets>=10.4,<12.0.0

# ============================================================================
# requirements-production.txt
# Para ambiente de produção
# ============================================================================

# Core dependencies (pinned versions for stability)
pandas==2.1.4
numpy==1.24.3
scikit-learn==1.3.2
xgboost==2.0.3
matplotlib==3.7.2
seaborn==0.12.2
scipy==1.11.4
tqdm==4.66.1
networkx==3.2.1
joblib==1.3.2

# Production utilities
gunicorn==21.2.0
redis==5.0.1
celery==5.3.4

# Monitoring
prometheus-client==0.19.0
sentry-sdk==1.39.2

# ============================================================================
# setup.py (arquivo adicional recomendado)
# ============================================================================

"""
from setuptools import setup, find_packages

with open("README.md", "r", encoding="utf-8") as fh:
    long_description = fh.read()

with open("requirements.txt", "r", encoding="utf-8") as fh:
    requirements = [line.strip() for line in fh if line.strip() and not line.startswith("#")]

setup(
    name="lotofacil-ml-predictor",
    version="2.0.0",
    author="Seu Nome",
    author_email="seu.email@exemplo.com",
    description="Sistema avançado de predição para Lotofácil usando Machine Learning",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/seu-usuario/lotofacil-ml-predictor",
    packages=find_packages(),
    classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "Topic :: Scientific/Engineering :: Information Analysis",
        "Topic :: Games/Entertainment",
    ],
    python_requires=">=3.8",
    install_requires=requirements,
    extras_require={
        "dev": ["pytest>=7.0.0", "black>=22.0.0", "flake8>=5.0.0"],
        "gpu": ["tensorflow-gpu>=2.10.0", "cupy-cuda11x>=11.0.0"],
        "web": ["streamlit>=1.15.0", "fastapi>=0.85.0", "dash>=2.6.0"],
        "all": ["pytest>=7.0.0", "black>=22.0.0", "streamlit>=1.15.0", "tensorflow-gpu>=2.10.0"]
    },
    entry_points={
        "console_scripts": [
            "lotofacil-predict=lotofacil_predictor:main",
        ],
    },
    keywords="machine-learning lotofacil lottery prediction ensemble xgboost statistical-analysis",
    project_urls={
        "Bug Reports": "https://github.com/seu-usuario/lotofacil-ml-predictor/issues",
        "Source": "https://github.com/seu-usuario/lotofacil-ml-predictor",
        "Documentation": "https://github.com/seu-usuario/lotofacil-ml-predictor/wiki",
    },
)
"""

# ============================================================================
# Comandos de Instalação Recomendados:
# ============================================================================

# INSTALAÇÃO BÁSICA:
# pip install -r requirements-minimal.txt

# INSTALAÇÃO COMPLETA:
# pip install -r requirements.txt

# DESENVOLVIMENTO:
# pip install -r requirements-dev.txt

# PRODUÇÃO:
# pip install -r requirements-production.txt

# COM INTERFACE WEB:
# pip install -r requirements-web.txt

# COM SUPORTE GPU:
# pip install -r requirements-gpu.txt

# USANDO SETUP.PY:
# pip install -e .                    # Instalação em modo desenvolvimento
# pip install -e .[dev]               # Com dependências de desenvolvimento
# pip install -e .[gpu]               # Com suporte GPU
# pip install -e .[web]               # Com interface web
# pip install -e .[all]               # Todas as funcionalidades

# ============================================================================